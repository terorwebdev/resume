{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-audio-player/lib/service/audio-player-service/audio-player.service.ts","ng://ngx-audio-player/lib/component/base/base-audio-player-components.ts","ng://ngx-audio-player/lib/component/mat-advanced-audio-player/mat-advanced-audio-player.component.ts","ng://ngx-audio-player/lib/component/mat-basic-audio-player/mat-basic-audio-player.component.ts","ng://ngx-audio-player/lib/pipe/seconds-to-minutes.ts","ng://ngx-audio-player/lib/ngx-audio-player.module.ts","ng://ngx-audio-player/lib/model/track.model.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","AudioPlayerService","playlist","indexSong","currentTrack","BehaviorSubject","currentTime","duration","init","updateCurrentSong","nextSong","previousSong","resetPlaylist","selectATrack","index","current","previous","next","getSubjectCurrentTrack","getPlaylist","setPlaylist","getIndexSong","Injectable","BaseAudioPlayerFunctions","loaderDisplay","isPlaying","volume","currTimePosChanged","event","player","nativeElement","value","bindPlayerEvent","_this","addEventListener","Math","floor","playBtnHandler","paused","play","pause","setTimeout","toggleVolume","setVolume","vol","ViewChild","static","ElementRef","MatAdvancedAudioPlayerComponent","playlistService","_super","call","displayedColumns","dataSource","MatTableDataSource","displayTitle","displayPlaylist","pageSizeOptions","expanded","autoPlay","displayVolumeControls","ngOnInit","setDataSourceAttributes","checkIfSongHasStartedSinceAtleastTwoSeconds","playlistData","subscribe","playlistTrack","mp","paginator","forEach","data","pageSize","hasNextPage","nextPage","firstPage","resetSong","hasPreviousPage","previousPage","lastPage","src","link","selectTrack","console","log","Input","MatPaginator","Component","selector","template","MatBasicAudioPlayerComponent","audioUrl","SecondsToMinutesPipe","transform","time","slice","Pipe","name","NgxAudioPlayerModule","NgModule","declarations","imports","CommonModule","FormsModule","MatButtonModule","MatCardModule","MatTableModule","MatFormFieldModule","MatSliderModule","MatExpansionModule","MatPaginatorModule","MatIconModule","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Track } from '../../model/track.model';\n\n@Injectable()\nexport class AudioPlayerService {\n\n  playlist: Track[] = [];\n\n  indexSong = 0;\n  currentTrack: BehaviorSubject<{}> = new BehaviorSubject(this.playlist[this.indexSong]);\n  currentTime = 0;\n  duration = 0;\n\n  constructor() {\n\n  }\n\n  init(): void {\n    this.updateCurrentSong();\n  }\n\n  nextSong(): void {\n    if ((this.indexSong + 1) >= this.playlist.length) {\n      this.indexSong = 0;\n    } else {\n      this.indexSong++;\n    }\n    this.updateCurrentSong();\n  }\n\n  previousSong(): void {\n    if ((this.indexSong - 1) < 0) {\n      this.indexSong = (this.playlist.length - 1);\n    } else {\n      this.indexSong--;\n    }\n    this.updateCurrentSong();\n  }\n\n  resetPlaylist(): void {\n    this.indexSong = 0;\n    this.updateCurrentSong();\n  }\n\n  selectATrack(index: number): void {\n    this.indexSong = index - 1;\n    this.updateCurrentSong();\n  }\n\n  updateCurrentSong(): void {\n    const current = this.playlist[this.indexSong];\n    const previous = ((this.indexSong - 1) >= 0) ? this.playlist[this.indexSong - 1] : this.playlist[this.playlist.length - 1];\n    const next = ((this.indexSong + 1) >= this.playlist.length) ? this.playlist[0] : this.playlist[this.indexSong + 1];\n\n    this.currentTrack.next([\n      previous,\n      current,\n      next\n    ]);\n  }\n\n  getSubjectCurrentTrack(): BehaviorSubject<{}> {\n    return this.currentTrack;\n  }\n\n  getPlaylist(): Track[] {\n    return this.playlist;\n  }\n\n  setPlaylist(playlist: Track[]) {\n    this.playlist = playlist;\n  }\n\n  getIndexSong() {\n    return this.indexSong;\n  }\n}\n","import { ViewChild, ElementRef } from '@angular/core';\nimport { MatSlider } from '@angular/material/slider';\n\nexport class BaseAudioPlayerFunctions {\n\n    @ViewChild('audioPlayer', {static: true}) player: ElementRef;\n    timeLineDuration: MatSlider;\n\n    loaderDisplay = false;\n    isPlaying = false;\n    currentTime = 0;\n    volume = 0.1;\n    duration = 0.01;\n\n    currTimePosChanged(event) {\n        this.player.nativeElement.currentTime = event.value;\n    }\n\n    bindPlayerEvent(): void {\n        this.player.nativeElement.addEventListener('playing', () => {\n            this.isPlaying = true;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n        this.player.nativeElement.addEventListener('pause', () => {\n            this.isPlaying = false;\n        });\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.currentTime = Math.floor(this.player.nativeElement.currentTime);\n        });\n        this.player.nativeElement.addEventListener('volume', () => {\n            this.volume = Math.floor(this.player.nativeElement.volume);\n        });\n        this.player.nativeElement.addEventListener('loadstart', () => {\n            this.loaderDisplay = true;\n        });\n        this.player.nativeElement.addEventListener('loadeddata', () => {\n            this.loaderDisplay = false;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n    }\n\n    playBtnHandler(): void {\n        if (this.loaderDisplay) {\n            return;\n        }\n        if (this.player.nativeElement.paused) {\n            this.player.nativeElement.play(this.currentTime);\n        } else {\n            this.currentTime = this.player.nativeElement.currentTime;\n            this.player.nativeElement.pause();\n        }\n    }\n\n    play(): void {\n        setTimeout(() => {\n            this.player.nativeElement.play();\n        }, 0);\n    }\n\n    toggleVolume() {\n        if (this.volume === 0) {\n            this.setVolume(1.0);\n        } else {\n            this.setVolume(0);\n        }\n    }\n\n    private setVolume(vol) {\n        this.volume = vol;\n        this.player.nativeElement.volume = this.volume;\n    }\n\n}\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';\nimport { Track } from '../../model/track.model';\nimport { BaseAudioPlayerFunctions } from '../base/base-audio-player-components';\nimport { MatSlider } from '@angular/material/slider';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n    selector: 'mat-advanced-audio-player',\n    templateUrl: './mat-advanced-audio-player.component.html',\n    styleUrls: ['./mat-advanced-audio-player.component.css']\n})\nexport class MatAdvancedAudioPlayerComponent extends BaseAudioPlayerFunctions implements OnInit {\n\n    displayedColumns: string[] = ['title', 'status'];\n    timeLineDuration: MatSlider;\n\n    dataSource = new MatTableDataSource<Track>();\n\n    paginator: MatPaginator;\n\n    playlistData: Track[];\n\n    @Input()\n    displayTitle = true;\n\n    @Input()\n    displayPlaylist = true;\n\n    @Input()\n    pageSizeOptions = [10, 20, 30];\n\n    @Input()\n    expanded = true;\n\n    @Input()\n    autoPlay = false;\n\n    @Input()\n    displayVolumeControls = true;\n\n    playlistTrack: any;\n\n    constructor(private playlistService: AudioPlayerService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.setDataSourceAttributes();\n        this.bindPlayerEvent();\n        this.player.nativeElement.addEventListener('ended', () => {\n            if (this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n                this.nextSong();\n            }\n        });\n        this.playlistService.setPlaylist(this.playlistData);\n        this.playlistService.getSubjectCurrentTrack().subscribe((playlistTrack) => {\n            this.playlistTrack = playlistTrack;\n        });\n        this.player.nativeElement.currentTime = 0;\n        this.playlistService.init();\n        if (this.autoPlay) {\n            super.play();\n        }\n    }\n\n    @ViewChild(MatPaginator, { static: false }) set matPaginator(mp: MatPaginator) {\n        this.paginator = mp;\n        this.setDataSourceAttributes();\n    }\n\n    setDataSourceAttributes() {\n        let index = 1;\n        if (this.playlistData) {\n            this.playlistData.forEach(data => {\n                data.index = index++;\n            });\n            this.dataSource = new MatTableDataSource<Track>(this.playlistData);\n            this.dataSource.paginator = this.paginator;\n        }\n    }\n\n    nextSong(): void {\n        if (this.displayPlaylist == true\n            && (((this.playlistService.indexSong + 1) % this.paginator.pageSize) === 0\n                || (this.playlistService.indexSong + 1) === this.paginator.length)) {\n            if (this.paginator.hasNextPage()) {\n                this.paginator.nextPage();\n            } else if (!this.paginator.hasNextPage()) {\n                this.paginator.firstPage();\n            }\n        }\n        this.currentTime = 0;\n        this.duration = 0.01;\n        this.playlistService.nextSong();\n        this.play();\n    }\n\n    previousSong(): void {\n        this.currentTime = 0;\n        this.duration = 0.01;\n        if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n            if (this.displayPlaylist == true\n                && (((this.playlistService.indexSong) % this.paginator.pageSize) === 0\n                    || (this.playlistService.indexSong) === 0)) {\n                if (this.paginator.hasPreviousPage()) {\n                    this.paginator.previousPage();\n                } else if (!this.paginator.hasPreviousPage()) {\n                    this.paginator.lastPage();\n                }\n            }\n            this.playlistService.previousSong();\n        } else {\n            this.resetSong();\n        }\n        this.play();\n    }\n\n    resetSong(): void {\n        this.player.nativeElement.src = this.playlistTrack[1].link;\n    }\n\n    selectTrack(index: number): void {\n        console.log('selectTrack(index: number): void: ' + index);\n        this.playlistService.selectATrack(index);\n        setTimeout(() => {\n            this.player.nativeElement.play();\n        }, 0);\n    }\n\n    checkIfSongHasStartedSinceAtleastTwoSeconds(): boolean {\n        return this.player.nativeElement.currentTime > 2;\n    }\n\n    @Input()\n    set playlist(playlist: Track[]) {\n        this.playlistData = playlist;\n        this.ngOnInit();\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BaseAudioPlayerFunctions } from '../base/base-audio-player-components';\n\n@Component({\n    selector: 'mat-basic-audio-player',\n    templateUrl: './mat-basic-audio-player.component.html',\n    styleUrls: ['./mat-basic-audio-player.component.css']\n})\nexport class MatBasicAudioPlayerComponent extends BaseAudioPlayerFunctions implements OnInit {\n\n    @Input()\n    title: string;\n\n    @Input()\n    audioUrl: string;\n\n    @Input()\n    displayTitle = false;\n\n    @Input()\n    autoPlay = false;\n\n    @Input()\n    displayVolumeControls = true;\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n        this.bindPlayerEvent();\n        if (this.autoPlay) {\n            super.play();\n        }\n    }\n\n    resetSong(): void {\n        this.player.nativeElement.src = this.audioUrl;\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Transform seconds to minutes:seconds\n * Example : 270 -> 02:30\n*/\n@Pipe({name: 'secondsToMinutes'})\nexport class SecondsToMinutesPipe implements PipeTransform {\n    transform(time: number): string {\n        const minutes = ('0' + Math.floor(time / 60)).slice(-2);\n        const seconds = ('0' + time % 60).slice(-2);\n        return `${minutes}:${seconds}`;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatBasicAudioPlayerComponent } from './component/mat-basic-audio-player/mat-basic-audio-player.component';\nimport { AudioPlayerService } from './service/audio-player-service/audio-player.service';\nimport { CommonModule } from '@angular/common';\nimport { SecondsToMinutesPipe } from './pipe/seconds-to-minutes';\nimport { MatAdvancedAudioPlayerComponent } from './component/mat-advanced-audio-player/mat-advanced-audio-player.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [MatBasicAudioPlayerComponent, SecondsToMinutesPipe, MatAdvancedAudioPlayerComponent],\n  imports: [CommonModule, FormsModule, MatButtonModule, MatCardModule, MatTableModule, MatFormFieldModule,\n    MatSliderModule, MatExpansionModule, MatPaginatorModule, MatIconModule],\n  exports: [MatBasicAudioPlayerComponent, MatAdvancedAudioPlayerComponent],\n  providers: [AudioPlayerService]\n})\nexport class NgxAudioPlayerModule {\n  constructor() {\n  }\n}\n","export class Track {\n  index?: number;\n  link: string;\n  title: string;\n}\n"]}