import { __decorate, __metadata } from 'tslib';
import { Injectable, ViewChild, ElementRef, Input, Component, Pipe, NgModule } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { MatTableDataSource, MatTableModule } from '@angular/material/table';
import { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';
import { MatSliderModule } from '@angular/material/slider';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatCardModule } from '@angular/material/card';
import { MatButtonModule } from '@angular/material/button';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MatIconModule } from '@angular/material/icon';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/card';
import * as ɵngcc2 from '@angular/material/button';
import * as ɵngcc3 from '@angular/material/icon';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '@angular/material/slider';
import * as ɵngcc6 from '@angular/material/expansion';
import * as ɵngcc7 from '@angular/material/table';
import * as ɵngcc8 from '@angular/material/paginator';

const _c0 = ["audioPlayer"];
function MatAdvancedAudioPlayerComponent_mat_icon_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 23);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 5);
    ɵngcc0.ɵɵelement(2, "path", 24);
    ɵngcc0.ɵɵelement(3, "path", 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function MatAdvancedAudioPlayerComponent_mat_icon_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 25);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 5);
    ɵngcc0.ɵɵelement(2, "path", 26);
    ɵngcc0.ɵɵelement(3, "path", 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function MatAdvancedAudioPlayerComponent_span_19_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "secondsToMinutes");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r3.currentTime), " ");
} }
function MatAdvancedAudioPlayerComponent_span_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "secondsToMinutes");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" -", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r4.duration - ctx_r4.currentTime), " ");
} }
function MatAdvancedAudioPlayerComponent_button_23_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 30);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 31);
    ɵngcc0.ɵɵelement(2, "path", 32);
    ɵngcc0.ɵɵelement(3, "path", 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function MatAdvancedAudioPlayerComponent_button_23_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 33);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 31);
    ɵngcc0.ɵɵelement(2, "path", 34);
    ɵngcc0.ɵɵelement(3, "path", 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function MatAdvancedAudioPlayerComponent_button_23_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 27);
    ɵngcc0.ɵɵlistener("click", function MatAdvancedAudioPlayerComponent_button_23_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.toggleVolume(); });
    ɵngcc0.ɵɵtemplate(1, MatAdvancedAudioPlayerComponent_button_23_mat_icon_1_Template, 4, 0, "mat-icon", 28);
    ɵngcc0.ɵɵtemplate(2, MatAdvancedAudioPlayerComponent_button_23_mat_icon_2_Template, 4, 0, "mat-icon", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.volume === 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.volume > 0);
} }
function MatAdvancedAudioPlayerComponent_mat_card_24_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r12.playlistTrack[1].title);
} }
function MatAdvancedAudioPlayerComponent_mat_card_24_marquee_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "marquee", 40);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r13.playlistTrack[1].title);
} }
function MatAdvancedAudioPlayerComponent_mat_card_24_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card", 35);
    ɵngcc0.ɵɵelementStart(1, "div", 36);
    ɵngcc0.ɵɵelementStart(2, "div", 37);
    ɵngcc0.ɵɵtemplate(3, MatAdvancedAudioPlayerComponent_mat_card_24_span_3_Template, 2, 1, "span", 18);
    ɵngcc0.ɵɵtemplate(4, MatAdvancedAudioPlayerComponent_mat_card_24_marquee_4_Template, 2, 1, "marquee", 38);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "div", 39);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r6.isPlaying);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.isPlaying);
} }
function MatAdvancedAudioPlayerComponent_mat_accordion_25_th_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 51);
    ɵngcc0.ɵɵtext(1, " Title ");
    ɵngcc0.ɵɵelementEnd();
} }
function MatAdvancedAudioPlayerComponent_mat_accordion_25_td_7_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td", 52);
    ɵngcc0.ɵɵlistener("click", function MatAdvancedAudioPlayerComponent_mat_accordion_25_td_7_Template_td_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); const element_r20 = ctx.$implicit; const ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.selectTrack(element_r20.index); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const element_r20 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", element_r20.title, " ");
} }
function MatAdvancedAudioPlayerComponent_mat_accordion_25_th_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "th", 51);
} }
function MatAdvancedAudioPlayerComponent_mat_accordion_25_td_10_div_1_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 55);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 56);
    ɵngcc0.ɵɵelement(2, "path", 14);
    ɵngcc0.ɵɵelement(3, "path", 57);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function MatAdvancedAudioPlayerComponent_mat_accordion_25_td_10_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, MatAdvancedAudioPlayerComponent_mat_accordion_25_td_10_div_1_mat_icon_1_Template, 4, 0, "mat-icon", 54);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r24 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24.isPlaying);
} }
function MatAdvancedAudioPlayerComponent_mat_accordion_25_td_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 53);
    ɵngcc0.ɵɵtemplate(1, MatAdvancedAudioPlayerComponent_mat_accordion_25_td_10_div_1_Template, 2, 1, "div", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const element_r23 = ctx.$implicit;
    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17.playlistTrack[1].title === element_r23.title);
} }
function MatAdvancedAudioPlayerComponent_mat_accordion_25_tr_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 58);
} }
function MatAdvancedAudioPlayerComponent_mat_accordion_25_tr_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 59);
} }
function MatAdvancedAudioPlayerComponent_mat_accordion_25_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-accordion");
    ɵngcc0.ɵɵelementStart(1, "mat-expansion-panel", 41);
    ɵngcc0.ɵɵelementStart(2, "mat-expansion-panel-header");
    ɵngcc0.ɵɵtext(3, " Play List ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "table", 42);
    ɵngcc0.ɵɵelementContainerStart(5, 43);
    ɵngcc0.ɵɵtemplate(6, MatAdvancedAudioPlayerComponent_mat_accordion_25_th_6_Template, 2, 0, "th", 44);
    ɵngcc0.ɵɵtemplate(7, MatAdvancedAudioPlayerComponent_mat_accordion_25_td_7_Template, 2, 1, "td", 45);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerStart(8, 46);
    ɵngcc0.ɵɵtemplate(9, MatAdvancedAudioPlayerComponent_mat_accordion_25_th_9_Template, 1, 0, "th", 44);
    ɵngcc0.ɵɵtemplate(10, MatAdvancedAudioPlayerComponent_mat_accordion_25_td_10_Template, 2, 1, "td", 47);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵtemplate(11, MatAdvancedAudioPlayerComponent_mat_accordion_25_tr_11_Template, 1, 0, "tr", 48);
    ɵngcc0.ɵɵtemplate(12, MatAdvancedAudioPlayerComponent_mat_accordion_25_tr_12_Template, 1, 0, "tr", 49);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(13, "mat-paginator", 50);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("expanded", ctx_r7.expanded);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("dataSource", ctx_r7.dataSource);
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵproperty("matHeaderRowDef", ctx_r7.displayedColumns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matRowDefColumns", ctx_r7.displayedColumns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("pageSizeOptions", ctx_r7.pageSizeOptions);
} }
function MatBasicAudioPlayerComponent_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 12);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 13);
    ɵngcc0.ɵɵelement(2, "path", 14);
    ɵngcc0.ɵɵelement(3, "path", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function MatBasicAudioPlayerComponent_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 16);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 13);
    ɵngcc0.ɵɵelement(2, "path", 17);
    ɵngcc0.ɵɵelement(3, "path", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function MatBasicAudioPlayerComponent_span_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "secondsToMinutes");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" -", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r3.duration - ctx_r3.currentTime), " ");
} }
function MatBasicAudioPlayerComponent_button_10_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 22);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 23);
    ɵngcc0.ɵɵelement(2, "path", 24);
    ɵngcc0.ɵɵelement(3, "path", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function MatBasicAudioPlayerComponent_button_10_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 25);
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 23);
    ɵngcc0.ɵɵelement(2, "path", 26);
    ɵngcc0.ɵɵelement(3, "path", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function MatBasicAudioPlayerComponent_button_10_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 19);
    ɵngcc0.ɵɵlistener("click", function MatBasicAudioPlayerComponent_button_10_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.toggleVolume(); });
    ɵngcc0.ɵɵtemplate(1, MatBasicAudioPlayerComponent_button_10_mat_icon_1_Template, 4, 0, "mat-icon", 20);
    ɵngcc0.ɵɵtemplate(2, MatBasicAudioPlayerComponent_button_10_mat_icon_2_Template, 4, 0, "mat-icon", 21);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.volume === 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.volume > 0);
} }
function MatBasicAudioPlayerComponent_mat_card_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card", 27);
    ɵngcc0.ɵɵelementStart(1, "div", 28);
    ɵngcc0.ɵɵelementStart(2, "div", 29);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.title, " ");
} }
let AudioPlayerService = class AudioPlayerService {
    constructor() {
        this.playlist = [];
        this.indexSong = 0;
        this.currentTrack = new BehaviorSubject(this.playlist[this.indexSong]);
        this.currentTime = 0;
        this.duration = 0;
    }
    init() {
        this.updateCurrentSong();
    }
    nextSong() {
        if ((this.indexSong + 1) >= this.playlist.length) {
            this.indexSong = 0;
        }
        else {
            this.indexSong++;
        }
        this.updateCurrentSong();
    }
    previousSong() {
        if ((this.indexSong - 1) < 0) {
            this.indexSong = (this.playlist.length - 1);
        }
        else {
            this.indexSong--;
        }
        this.updateCurrentSong();
    }
    resetPlaylist() {
        this.indexSong = 0;
        this.updateCurrentSong();
    }
    selectATrack(index) {
        this.indexSong = index - 1;
        this.updateCurrentSong();
    }
    updateCurrentSong() {
        const current = this.playlist[this.indexSong];
        const previous = ((this.indexSong - 1) >= 0) ? this.playlist[this.indexSong - 1] : this.playlist[this.playlist.length - 1];
        const next = ((this.indexSong + 1) >= this.playlist.length) ? this.playlist[0] : this.playlist[this.indexSong + 1];
        this.currentTrack.next([
            previous,
            current,
            next
        ]);
    }
    getSubjectCurrentTrack() {
        return this.currentTrack;
    }
    getPlaylist() {
        return this.playlist;
    }
    setPlaylist(playlist) {
        this.playlist = playlist;
    }
    getIndexSong() {
        return this.indexSong;
    }
};
AudioPlayerService.ɵfac = function AudioPlayerService_Factory(t) { return new (t || AudioPlayerService)(); };
AudioPlayerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AudioPlayerService, factory: AudioPlayerService.ɵfac });
AudioPlayerService = __decorate([ __metadata("design:paramtypes", [])
], AudioPlayerService);

class BaseAudioPlayerFunctions {
    constructor() {
        this.loaderDisplay = false;
        this.isPlaying = false;
        this.currentTime = 0;
        this.volume = 0.1;
        this.duration = 0.01;
    }
    currTimePosChanged(event) {
        this.player.nativeElement.currentTime = event.value;
    }
    bindPlayerEvent() {
        this.player.nativeElement.addEventListener('playing', () => {
            this.isPlaying = true;
            this.duration = Math.floor(this.player.nativeElement.duration);
        });
        this.player.nativeElement.addEventListener('pause', () => {
            this.isPlaying = false;
        });
        this.player.nativeElement.addEventListener('timeupdate', () => {
            this.currentTime = Math.floor(this.player.nativeElement.currentTime);
        });
        this.player.nativeElement.addEventListener('volume', () => {
            this.volume = Math.floor(this.player.nativeElement.volume);
        });
        this.player.nativeElement.addEventListener('loadstart', () => {
            this.loaderDisplay = true;
        });
        this.player.nativeElement.addEventListener('loadeddata', () => {
            this.loaderDisplay = false;
            this.duration = Math.floor(this.player.nativeElement.duration);
        });
    }
    playBtnHandler() {
        if (this.loaderDisplay) {
            return;
        }
        if (this.player.nativeElement.paused) {
            this.player.nativeElement.play(this.currentTime);
        }
        else {
            this.currentTime = this.player.nativeElement.currentTime;
            this.player.nativeElement.pause();
        }
    }
    play() {
        setTimeout(() => {
            this.player.nativeElement.play();
        }, 0);
    }
    toggleVolume() {
        if (this.volume === 0) {
            this.setVolume(1.0);
        }
        else {
            this.setVolume(0);
        }
    }
    setVolume(vol) {
        this.volume = vol;
        this.player.nativeElement.volume = this.volume;
    }
}
BaseAudioPlayerFunctions.ɵfac = function BaseAudioPlayerFunctions_Factory(t) { return new (t || BaseAudioPlayerFunctions)(); };
BaseAudioPlayerFunctions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseAudioPlayerFunctions, viewQuery: function BaseAudioPlayerFunctions_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.player = _t.first);
    } } });
__decorate([
    ViewChild('audioPlayer', { static: true }),
    __metadata("design:type", ElementRef)
], BaseAudioPlayerFunctions.prototype, "player", void 0);

let MatAdvancedAudioPlayerComponent = class MatAdvancedAudioPlayerComponent extends BaseAudioPlayerFunctions {
    constructor(playlistService) {
        super();
        this.playlistService = playlistService;
        this.displayedColumns = ['title', 'status'];
        this.dataSource = new MatTableDataSource();
        this.displayTitle = true;
        this.displayPlaylist = true;
        this.pageSizeOptions = [10, 20, 30];
        this.expanded = true;
        this.autoPlay = false;
        this.displayVolumeControls = true;
    }
    ngOnInit() {
        this.setDataSourceAttributes();
        this.bindPlayerEvent();
        this.player.nativeElement.addEventListener('ended', () => {
            if (this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {
                this.nextSong();
            }
        });
        this.playlistService.setPlaylist(this.playlistData);
        this.playlistService.getSubjectCurrentTrack().subscribe((playlistTrack) => {
            this.playlistTrack = playlistTrack;
        });
        this.player.nativeElement.currentTime = 0;
        this.playlistService.init();
        if (this.autoPlay) {
            super.play();
        }
    }
    set matPaginator(mp) {
        this.paginator = mp;
        this.setDataSourceAttributes();
    }
    setDataSourceAttributes() {
        let index = 1;
        if (this.playlistData) {
            this.playlistData.forEach(data => {
                data.index = index++;
            });
            this.dataSource = new MatTableDataSource(this.playlistData);
            this.dataSource.paginator = this.paginator;
        }
    }
    nextSong() {
        if (this.displayPlaylist == true
            && (((this.playlistService.indexSong + 1) % this.paginator.pageSize) === 0
                || (this.playlistService.indexSong + 1) === this.paginator.length)) {
            if (this.paginator.hasNextPage()) {
                this.paginator.nextPage();
            }
            else if (!this.paginator.hasNextPage()) {
                this.paginator.firstPage();
            }
        }
        this.currentTime = 0;
        this.duration = 0.01;
        this.playlistService.nextSong();
        this.play();
    }
    previousSong() {
        this.currentTime = 0;
        this.duration = 0.01;
        if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {
            if (this.displayPlaylist == true
                && (((this.playlistService.indexSong) % this.paginator.pageSize) === 0
                    || (this.playlistService.indexSong) === 0)) {
                if (this.paginator.hasPreviousPage()) {
                    this.paginator.previousPage();
                }
                else if (!this.paginator.hasPreviousPage()) {
                    this.paginator.lastPage();
                }
            }
            this.playlistService.previousSong();
        }
        else {
            this.resetSong();
        }
        this.play();
    }
    resetSong() {
        this.player.nativeElement.src = this.playlistTrack[1].link;
    }
    selectTrack(index) {
        console.log('selectTrack(index: number): void: ' + index);
        this.playlistService.selectATrack(index);
        setTimeout(() => {
            this.player.nativeElement.play();
        }, 0);
    }
    checkIfSongHasStartedSinceAtleastTwoSeconds() {
        return this.player.nativeElement.currentTime > 2;
    }
    set playlist(playlist) {
        this.playlistData = playlist;
        this.ngOnInit();
    }
};
MatAdvancedAudioPlayerComponent.ɵfac = function MatAdvancedAudioPlayerComponent_Factory(t) { return new (t || MatAdvancedAudioPlayerComponent)(ɵngcc0.ɵɵdirectiveInject(AudioPlayerService)); };
MatAdvancedAudioPlayerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAdvancedAudioPlayerComponent, selectors: [["mat-advanced-audio-player"]], viewQuery: function MatAdvancedAudioPlayerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(MatPaginator, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.matPaginator = _t.first);
    } }, inputs: { displayTitle: "displayTitle", displayPlaylist: "displayPlaylist", pageSizeOptions: "pageSizeOptions", expanded: "expanded", autoPlay: "autoPlay", displayVolumeControls: "displayVolumeControls", playlist: "playlist" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 26, vars: 13, consts: [[1, "d-flex", "justify-content-center", "ngx-advanced-audio-player", "z-depth-1", "mat-elevation-z2", 2, "margin", "0px"], [3, "src"], ["audioPlayer", ""], ["mat-button", "", 1, "p-1", 3, "disabled", "click"], ["aria-hidden", "true"], ["xmlns", "http://www.w3.org/2000/svg", "width", "32", "height", "32", "viewBox", "0 0 24 24"], ["d", "M6 6h2v12H6zm3.5 6l8.5 6V6z"], ["d", "M0 0h32v32H0z", "fill", "none"], ["mat-button", "", 1, "p-1", "play-pause", 3, "disabled", "click"], ["class", "play-track", "aria-hidden", "true", 4, "ngIf"], ["class", "pause-track", "aria-hidden", "true", 4, "ngIf"], ["mat-button", "", 1, "p-1", "skip-next", 3, "disabled", "click"], ["aria-hidden", "true", 1, "next-track"], ["d", "M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z"], ["d", "M0 0h24v24H0z", "fill", "none"], [1, "col"], [1, "d-flex", "flex-fill", "justify-content-center"], [1, "d-none", "d-sm-block", "py-3", "px-1", 2, "font-size", "12px"], [4, "ngIf"], ["min", "0", 1, "d-none", "d-sm-block", "flex-fill", "p-1", 2, "width", "100%", 3, "max", "value", "change"], [1, "py-3", "px-1", 2, "font-size", "12px", "text-align", "right"], ["mat-button", "", "class", "p-1 volume", 3, "click", 4, "ngIf"], ["class", "mat-elevation-z1", 4, "ngIf"], ["aria-hidden", "true", 1, "play-track"], ["d", "M8 5v14l11-7z"], ["aria-hidden", "true", 1, "pause-track"], ["d", "M6 19h4V5H6v14zm8-14v14h4V5h-4z"], ["mat-button", "", 1, "p-1", "volume", 3, "click"], ["class", "volume-mute", "aria-hidden", "true", 4, "ngIf"], ["class", "volume-up", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "volume-mute"], ["xmlns", "http://www.w3.org/2000/svg", "width", "28", "height", "28", "viewBox", "0 0 24 24"], ["d", "M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"], ["aria-hidden", "true", 1, "volume-up"], ["d", "M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"], [1, "mat-elevation-z1"], [2, "text-align", "center"], [2, "margin", "1px 2px", "padding", "1em"], ["behavior", "scroll", "direction", "left", 4, "ngIf"], [1, "clear"], ["behavior", "scroll", "direction", "left"], [3, "expanded"], ["mat-table", "", 1, "mat-elevation-z6", 3, "dataSource"], ["matColumnDef", "title"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 3, "click", 4, "matCellDef"], ["matColumnDef", "status"], ["mat-cell", "", 4, "matCellDef"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["class", "mat-select-content", "mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["showFirstLastButtons", "", 3, "pageSizeOptions"], ["mat-header-cell", ""], ["mat-cell", "", 3, "click"], ["mat-cell", ""], ["class", "currently-playing", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "currently-playing"], ["xmlns", "http://www.w3.org/2000/svg", "height", "24", "viewBox", "0 0 24 24", "width", "24"], ["d", "M12 3v9.28c-.47-.17-.97-.28-1.5-.28C8.01 12 6 14.01 6 16.5S8.01 21 10.5 21c2.31 0 4.2-1.75 4.45-4H15V6h4V3h-7z"], ["mat-header-row", ""], ["mat-row", "", 1, "mat-select-content"]], template: function MatAdvancedAudioPlayerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-card", 0);
        ɵngcc0.ɵɵelement(1, "audio", 1, 2);
        ɵngcc0.ɵɵelementStart(3, "button", 3);
        ɵngcc0.ɵɵlistener("click", function MatAdvancedAudioPlayerComponent_Template_button_click_3_listener() { return ctx.previousSong(); });
        ɵngcc0.ɵɵelementStart(4, "mat-icon", 4);
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(5, "svg", 5);
        ɵngcc0.ɵɵelement(6, "path", 6);
        ɵngcc0.ɵɵelement(7, "path", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵnamespaceHTML();
        ɵngcc0.ɵɵelementStart(8, "button", 8);
        ɵngcc0.ɵɵlistener("click", function MatAdvancedAudioPlayerComponent_Template_button_click_8_listener() { return ctx.playBtnHandler(); });
        ɵngcc0.ɵɵtemplate(9, MatAdvancedAudioPlayerComponent_mat_icon_9_Template, 4, 0, "mat-icon", 9);
        ɵngcc0.ɵɵtemplate(10, MatAdvancedAudioPlayerComponent_mat_icon_10_Template, 4, 0, "mat-icon", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "button", 11);
        ɵngcc0.ɵɵlistener("click", function MatAdvancedAudioPlayerComponent_Template_button_click_11_listener() { return ctx.nextSong(); });
        ɵngcc0.ɵɵelementStart(12, "mat-icon", 12);
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(13, "svg", 5);
        ɵngcc0.ɵɵelement(14, "path", 13);
        ɵngcc0.ɵɵelement(15, "path", 14);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵnamespaceHTML();
        ɵngcc0.ɵɵelementStart(16, "div", 15);
        ɵngcc0.ɵɵelementStart(17, "div", 16);
        ɵngcc0.ɵɵelementStart(18, "div", 17);
        ɵngcc0.ɵɵtemplate(19, MatAdvancedAudioPlayerComponent_span_19_Template, 3, 3, "span", 18);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(20, "mat-slider", 19);
        ɵngcc0.ɵɵlistener("change", function MatAdvancedAudioPlayerComponent_Template_mat_slider_change_20_listener($event) { return ctx.currTimePosChanged($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "div", 20);
        ɵngcc0.ɵɵtemplate(22, MatAdvancedAudioPlayerComponent_span_22_Template, 3, 3, "span", 18);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(23, MatAdvancedAudioPlayerComponent_button_23_Template, 3, 2, "button", 21);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(24, MatAdvancedAudioPlayerComponent_mat_card_24_Template, 6, 2, "mat-card", 22);
        ɵngcc0.ɵɵtemplate(25, MatAdvancedAudioPlayerComponent_mat_accordion_25_Template, 14, 5, "mat-accordion", 18);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("src", ctx.playlistTrack[1].link, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", ctx.loaderDisplay);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("disabled", ctx.loaderDisplay);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.loaderDisplay && !ctx.isPlaying);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.loaderDisplay && ctx.isPlaying);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("disabled", ctx.loaderDisplay);
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵproperty("ngIf", ctx.duration !== 0.01);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("max", ctx.duration);
        ɵngcc0.ɵɵpropertyInterpolate("value", ctx.currentTime);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.duration !== 0.01);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.displayVolumeControls);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.displayTitle);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.displayPlaylist);
    } }, directives: function () { return [ɵngcc1.MatCard, ɵngcc2.MatButton, ɵngcc3.MatIcon, ɵngcc4.NgIf, ɵngcc5.MatSlider, ɵngcc6.MatAccordion, ɵngcc6.MatExpansionPanel, ɵngcc6.MatExpansionPanelHeader, ɵngcc7.MatTable, ɵngcc7.MatColumnDef, ɵngcc7.MatHeaderCellDef, ɵngcc7.MatCellDef, ɵngcc7.MatHeaderRowDef, ɵngcc7.MatRowDef, ɵngcc8.MatPaginator, ɵngcc7.MatHeaderCell, ɵngcc7.MatCell, ɵngcc7.MatHeaderRow, ɵngcc7.MatRow]; }, pipes: function () { return [SecondsToMinutesPipe]; }, styles: ["@import url(https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.2.1/css/bootstrap-grid.min.css);mat-card[_ngcontent-%COMP%]{padding:0!important;background:rgba(0,0,0,.02)}mat-slider[_ngcontent-%COMP%]{max-height:30px}table[_ngcontent-%COMP%]{width:100%}button[_ngcontent-%COMP%]:focus, button[_ngcontent-%COMP%]:hover{outline:0!important}.ngx-advanced-audio-player[_ngcontent-%COMP%]{min-width:325px}.mat-icon[_ngcontent-%COMP%]{height:32px!important;width:32px!important}.material-icons[_ngcontent-%COMP%]{font-size:16px!important}mat-icon[_ngcontent-%COMP%] > .currently-playing[_ngcontent-%COMP%]{height:16px!important;width:16px!important}.play-pause[_ngcontent-%COMP%]{border-left:2px solid rgba(0,0,0,.1);border-right:2px solid rgba(0,0,0,.1)}.volume[_ngcontent-%COMP%]{border-left:2px solid rgba(0,0,0,.1)}.skip-next[_ngcontent-%COMP%]{border-right:2px solid rgba(0,0,0,.1)}"] });
MatAdvancedAudioPlayerComponent.ctorParameters = () => [
    { type: AudioPlayerService }
];
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "displayTitle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "displayPlaylist", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "pageSizeOptions", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "expanded", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "autoPlay", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "displayVolumeControls", void 0);
__decorate([
    ViewChild(MatPaginator, { static: false }),
    __metadata("design:type", MatPaginator),
    __metadata("design:paramtypes", [MatPaginator])
], MatAdvancedAudioPlayerComponent.prototype, "matPaginator", null);
__decorate([
    Input(),
    __metadata("design:type", Array),
    __metadata("design:paramtypes", [Array])
], MatAdvancedAudioPlayerComponent.prototype, "playlist", null);
MatAdvancedAudioPlayerComponent = __decorate([ __metadata("design:paramtypes", [AudioPlayerService])
], MatAdvancedAudioPlayerComponent);

let MatBasicAudioPlayerComponent = class MatBasicAudioPlayerComponent extends BaseAudioPlayerFunctions {
    constructor() {
        super();
        this.displayTitle = false;
        this.autoPlay = false;
        this.displayVolumeControls = true;
    }
    ngOnInit() {
        this.bindPlayerEvent();
        if (this.autoPlay) {
            super.play();
        }
    }
    resetSong() {
        this.player.nativeElement.src = this.audioUrl;
    }
};
MatBasicAudioPlayerComponent.ɵfac = function MatBasicAudioPlayerComponent_Factory(t) { return new (t || MatBasicAudioPlayerComponent)(); };
MatBasicAudioPlayerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatBasicAudioPlayerComponent, selectors: [["mat-basic-audio-player"]], inputs: { displayTitle: "displayTitle", autoPlay: "autoPlay", displayVolumeControls: "displayVolumeControls", title: "title", audioUrl: "audioUrl" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 12, vars: 9, consts: [[1, "d-flex", "ngx-basic-audio-player", "z-depth-1", "mat-elevation-z1"], [3, "src"], ["audioPlayer", ""], ["mat-button", "", 1, "ngx-basic-audio-player-button-handler", 2, "font-size", "14px!important", 3, "disabled", "click"], ["class", "play-track", "aria-hidden", "true", 4, "ngIf"], ["class", "pause-track", "aria-hidden", "true", 4, "ngIf"], [1, "flex-fill", "pl-1", "ngx-basic-audio-player-slider"], ["min", "0", 2, "width", "100%", 3, "max", "value", "change"], [1, "d-flex", "ngx-basic-audio-player-duration"], ["class", "pl-2 pr-3 my-auto", "style", "font-size: 14px!important;", 4, "ngIf"], ["mat-button", "", "style", "padding: 0px!important; min-width:48px!important;", 3, "click", 4, "ngIf"], ["class", "z-depth-1 mat-elevation-z1", 4, "ngIf"], ["aria-hidden", "true", 1, "play-track"], ["xmlns", "http://www.w3.org/2000/svg", "width", "32", "height", "32", "viewBox", "0 0 24 24"], ["d", "M8 5v14l11-7z"], ["d", "M0 0h24v24H0z", "fill", "none"], ["aria-hidden", "true", 1, "pause-track"], ["d", "M6 19h4V5H6v14zm8-14v14h4V5h-4z"], [1, "pl-2", "pr-3", "my-auto", 2, "font-size", "14px!important"], ["mat-button", "", 2, "padding", "0px!important", "min-width", "48px!important", 3, "click"], ["class", "volume-mute", "aria-hidden", "true", 4, "ngIf"], ["class", "volume-up", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "volume-mute"], ["xmlns", "http://www.w3.org/2000/svg", "width", "28", "height", "28", "viewBox", "0 0 24 24"], ["d", "M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"], ["aria-hidden", "true", 1, "volume-up"], ["d", "M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"], [1, "z-depth-1", "mat-elevation-z1"], [2, "text-align", "center"], [2, "margin", "1px 2px", "padding", "1em"]], template: function MatBasicAudioPlayerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-card", 0);
        ɵngcc0.ɵɵelement(1, "audio", 1, 2);
        ɵngcc0.ɵɵelementStart(3, "button", 3);
        ɵngcc0.ɵɵlistener("click", function MatBasicAudioPlayerComponent_Template_button_click_3_listener() { return ctx.playBtnHandler(); });
        ɵngcc0.ɵɵtemplate(4, MatBasicAudioPlayerComponent_mat_icon_4_Template, 4, 0, "mat-icon", 4);
        ɵngcc0.ɵɵtemplate(5, MatBasicAudioPlayerComponent_mat_icon_5_Template, 4, 0, "mat-icon", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 6);
        ɵngcc0.ɵɵelementStart(7, "mat-slider", 7);
        ɵngcc0.ɵɵlistener("change", function MatBasicAudioPlayerComponent_Template_mat_slider_change_7_listener($event) { return ctx.currTimePosChanged($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 8);
        ɵngcc0.ɵɵtemplate(9, MatBasicAudioPlayerComponent_span_9_Template, 3, 3, "span", 9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, MatBasicAudioPlayerComponent_button_10_Template, 3, 2, "button", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(11, MatBasicAudioPlayerComponent_mat_card_11_Template, 4, 1, "mat-card", 11);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("src", ctx.audioUrl, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", ctx.loaderDisplay);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.loaderDisplay && !ctx.isPlaying);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.loaderDisplay && ctx.isPlaying);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("max", ctx.duration);
        ɵngcc0.ɵɵpropertyInterpolate("value", ctx.currentTime);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.duration !== 0.01);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.displayVolumeControls);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.displayTitle && ctx.title !== "");
    } }, directives: function () { return [ɵngcc1.MatCard, ɵngcc2.MatButton, ɵngcc4.NgIf, ɵngcc5.MatSlider, ɵngcc3.MatIcon]; }, pipes: function () { return [SecondsToMinutesPipe]; }, styles: ["@import url(https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.2.1/css/bootstrap-grid.min.css);mat-card[_ngcontent-%COMP%], mat-slider[_ngcontent-%COMP%]{padding:0!important}button[_ngcontent-%COMP%]:focus, button[_ngcontent-%COMP%]:hover{outline:0!important}.ngx-basic-audio-player[_ngcontent-%COMP%]{min-width:300px}svg[_ngcontent-%COMP%]{vertical-align:top}.mat-icon[_ngcontent-%COMP%]{height:32px!important;width:32px!important}.material-icons[_ngcontent-%COMP%]{font-size:32px!important}mat-card[_ngcontent-%COMP%]{background:rgba(0,0,0,.02)}"] });
__decorate([
    Input(),
    __metadata("design:type", String)
], MatBasicAudioPlayerComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], MatBasicAudioPlayerComponent.prototype, "audioUrl", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatBasicAudioPlayerComponent.prototype, "displayTitle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatBasicAudioPlayerComponent.prototype, "autoPlay", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatBasicAudioPlayerComponent.prototype, "displayVolumeControls", void 0);
MatBasicAudioPlayerComponent = __decorate([ __metadata("design:paramtypes", [])
], MatBasicAudioPlayerComponent);

/*
 * Transform seconds to minutes:seconds
 * Example : 270 -> 02:30
*/
let SecondsToMinutesPipe = class SecondsToMinutesPipe {
    transform(time) {
        const minutes = ('0' + Math.floor(time / 60)).slice(-2);
        const seconds = ('0' + time % 60).slice(-2);
        return `${minutes}:${seconds}`;
    }
};
SecondsToMinutesPipe.ɵfac = function SecondsToMinutesPipe_Factory(t) { return new (t || SecondsToMinutesPipe)(); };
SecondsToMinutesPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "secondsToMinutes", type: SecondsToMinutesPipe, pure: true });

let NgxAudioPlayerModule = class NgxAudioPlayerModule {
    constructor() {
    }
};
NgxAudioPlayerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxAudioPlayerModule });
NgxAudioPlayerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxAudioPlayerModule_Factory(t) { return new (t || NgxAudioPlayerModule)(); }, providers: [AudioPlayerService], imports: [[CommonModule, FormsModule, MatButtonModule, MatCardModule, MatTableModule, MatFormFieldModule,
            MatSliderModule, MatExpansionModule, MatPaginatorModule, MatIconModule]] });
NgxAudioPlayerModule = __decorate([ __metadata("design:paramtypes", [])
], NgxAudioPlayerModule);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AudioPlayerService, [{
        type: Injectable
    }], function () { return []; }, null); })();

/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAdvancedAudioPlayerComponent, [{
        type: Component,
        args: [{
                selector: 'mat-advanced-audio-player',
                template: "<mat-card class=\"d-flex justify-content-center ngx-advanced-audio-player z-depth-1 mat-elevation-z2\" style=\"margin: 0px;\">\n  \n  <audio [src]=\"playlistTrack[1].link\" #audioPlayer></audio>\n\n    <button class=\"p-1\" mat-button (click)='previousSong();'\n      [disabled]=\"loaderDisplay\">\n      <mat-icon aria-hidden=\"true\">\n        <!-- Skip previous icon (skip_previous) -->\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M6 6h2v12H6zm3.5 6l8.5 6V6z\"/><path d=\"M0 0h32v32H0z\" fill=\"none\"/></svg>\n      </mat-icon>\n    </button>\n    <button mat-button class=\"p-1 play-pause\" (click)='playBtnHandler();' [disabled]=\"loaderDisplay\">\n        <mat-icon *ngIf=\"!loaderDisplay && !isPlaying\" class=\"play-track\" aria-hidden=\"true\">\n          <!-- Play icon (play_arrow) -->\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M8 5v14l11-7z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n        </mat-icon>\n        <mat-icon *ngIf=\"!loaderDisplay && isPlaying\" class=\"pause-track\" aria-hidden=\"true\">\n          <!-- Pause icon (pause) -->\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n        </mat-icon>\n    </button>\n    <button mat-button class=\"p-1 skip-next\" (click)='nextSong();' [disabled]=\"loaderDisplay\">\n      <mat-icon class=\"next-track\" aria-hidden=\"true\">\n        <!-- Skip next icon (skip_next) -->\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n      </mat-icon>\n    </button>\n\n  <div class=\"col\">\n    <div class=\"d-flex flex-fill justify-content-center\">\n      <div class=\"d-none d-sm-block py-3 px-1\" style=\"font-size: 12px\">\n        <span *ngIf=\"duration !== 0.01\">\n          {{currentTime | secondsToMinutes}}\n        </span>\n      </div>\n      <mat-slider class=\"d-none d-sm-block flex-fill p-1\" style=\"width: 100%\" min=\"0\" max=\"{{duration}}\" value=\"{{currentTime}}\"\n        (change)=\"currTimePosChanged($event)\"></mat-slider>\n\n      <div class=\"py-3 px-1\" style=\"font-size: 12px; text-align: right\">\n        <span *ngIf=\"duration !== 0.01\">\n          -{{duration-currentTime | secondsToMinutes }}\n        </span>\n      </div>\n    </div>\n  </div>\n  <button *ngIf=\"displayVolumeControls\" mat-button class=\"p-1 volume\" (click)='toggleVolume();'>\n    <mat-icon *ngIf=\"volume === 0\" class=\"volume-mute\" aria-hidden=\"true\">\n      <!-- Volume mute icon (volume_off) -->\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\"><path d=\"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n    </mat-icon>\n    <mat-icon *ngIf=\"volume > 0\" class=\"volume-up\" aria-hidden=\"true\">\n      <!-- Volume up icon (volume_up) -->\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\"><path d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n    </mat-icon>\n  </button>\n</mat-card>\n\n<mat-card *ngIf=\"displayTitle\" class=\"mat-elevation-z1\">\n  <div style=\"text-align: center;\">\n    <div style=\"margin: 1px 2px; padding: 1em\">\n      <span *ngIf=\"!isPlaying\">{{ playlistTrack[1].title }}</span>\n      <marquee *ngIf=\"isPlaying\" behavior=\"scroll\" direction=\"left\">{{ playlistTrack[1].title }}</marquee>\n    </div>\n    <div class=\"clear\"></div>\n  </div>\n</mat-card>\n\n<mat-accordion *ngIf=\"displayPlaylist\">\n  <mat-expansion-panel [expanded]=\"expanded\">\n    <mat-expansion-panel-header>\n      Play List\n    </mat-expansion-panel-header>\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z6\">\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef> Title </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"selectTrack(element.index)\"> {{element.title}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"playlistTrack[1].title === element.title\">\n            <!-- <mat-icon *ngIf=\"isPlaying\" aria-hidden=\"true\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n            </mat-icon> -->\n            <mat-icon class=\"currently-playing\" *ngIf=\"isPlaying\" aria-hidden=\"true\">\n              <!-- Play icon (play_arrow) -->\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 3v9.28c-.47-.17-.97-.28-1.5-.28C8.01 12 6 14.01 6 16.5S8.01 21 10.5 21c2.31 0 4.2-1.75 4.45-4H15V6h4V3h-7z\"/></svg>\n            </mat-icon>\n          </div>\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr class=\"mat-select-content\" mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons></mat-paginator>\n  </mat-expansion-panel>\n</mat-accordion>",
                styles: ["@import url(https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.2.1/css/bootstrap-grid.min.css);mat-card{padding:0!important;background:rgba(0,0,0,.02)}mat-slider{max-height:30px}table{width:100%}button:focus,button:hover{outline:0!important}.ngx-advanced-audio-player{min-width:325px}.mat-icon{height:32px!important;width:32px!important}.material-icons{font-size:16px!important}mat-icon>.currently-playing{height:16px!important;width:16px!important}.play-pause{border-left:2px solid rgba(0,0,0,.1);border-right:2px solid rgba(0,0,0,.1)}.volume{border-left:2px solid rgba(0,0,0,.1)}.skip-next{border-right:2px solid rgba(0,0,0,.1)}"]
            }]
    }], function () { return [{ type: AudioPlayerService }]; }, { displayTitle: [{
            type: Input
        }], displayPlaylist: [{
            type: Input
        }], pageSizeOptions: [{
            type: Input
        }], expanded: [{
            type: Input
        }], autoPlay: [{
            type: Input
        }], displayVolumeControls: [{
            type: Input
        }], matPaginator: [{
            type: ViewChild,
            args: [MatPaginator, { static: false }]
        }], playlist: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBasicAudioPlayerComponent, [{
        type: Component,
        args: [{
                selector: 'mat-basic-audio-player',
                template: "<mat-card class=\"d-flex ngx-basic-audio-player z-depth-1 mat-elevation-z1\">\n    <audio [src]=\"audioUrl\" #audioPlayer></audio>\n    <button mat-button (click)='playBtnHandler();' class=\"ngx-basic-audio-player-button-handler\"\n        style=\"font-size: 14px!important;\" [disabled]=\"loaderDisplay\">\n            <mat-icon *ngIf=\"!loaderDisplay && !isPlaying\" class=\"play-track\" aria-hidden=\"true\">\n                <!-- Play icon (play_arrow) -->\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M8 5v14l11-7z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n            </mat-icon>\n            <mat-icon *ngIf=\"!loaderDisplay && isPlaying\" class=\"pause-track\" aria-hidden=\"true\">\n                <!-- Pause icon (pause) -->\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n            </mat-icon>\n    </button>\n    <div class=\"flex-fill pl-1 ngx-basic-audio-player-slider\">\n        <mat-slider style=\"width: 100%\" min=\"0\" max=\"{{duration}}\" value=\"{{currentTime}}\"\n            (change)=\"currTimePosChanged($event)\"></mat-slider>\n    </div>\n    <div class=\"d-flex ngx-basic-audio-player-duration\">\n        <span *ngIf=\"duration !== 0.01\" class=\"pl-2 pr-3 my-auto\" style=\"font-size: 14px!important;\">\n            -{{duration-currentTime |\n            secondsToMinutes }}\n        </span>\n    </div>\n    <button *ngIf=\"displayVolumeControls\" mat-button (click)='toggleVolume();'\n        style=\"padding: 0px!important; min-width:48px!important;\">\n        <mat-icon *ngIf=\"volume === 0\" class=\"volume-mute\" aria-hidden=\"true\">\n            <!-- Volume mute icon (volume_off) -->\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\"><path d=\"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n          </mat-icon>\n          <mat-icon *ngIf=\"volume > 0\" class=\"volume-up\" aria-hidden=\"true\">\n            <!-- Volume up icon (volume_up) -->\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\"><path d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n          </mat-icon>\n    </button>\n</mat-card>\n\n<mat-card class=\"z-depth-1 mat-elevation-z1\" *ngIf=\"displayTitle && title !== ''\">\n    <div style=\"text-align: center;\">\n        <div style=\"margin: 1px 2px; padding: 1em\">\n            {{ title }}\n        </div>\n    </div>\n</mat-card>",
                styles: ["@import url(https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.2.1/css/bootstrap-grid.min.css);mat-card,mat-slider{padding:0!important}button:focus,button:hover{outline:0!important}.ngx-basic-audio-player{min-width:300px}svg{vertical-align:top}.mat-icon{height:32px!important;width:32px!important}.material-icons{font-size:32px!important}mat-card{background:rgba(0,0,0,.02)}"]
            }]
    }], function () { return []; }, { displayTitle: [{
            type: Input
        }], autoPlay: [{
            type: Input
        }], displayVolumeControls: [{
            type: Input
        }], title: [{
            type: Input
        }], audioUrl: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SecondsToMinutesPipe, [{
        type: Pipe,
        args: [{ name: 'secondsToMinutes' }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxAudioPlayerModule, { declarations: function () { return [MatBasicAudioPlayerComponent,
        SecondsToMinutesPipe,
        MatAdvancedAudioPlayerComponent]; }, imports: function () { return [CommonModule, FormsModule, MatButtonModule, MatCardModule, MatTableModule, MatFormFieldModule,
        MatSliderModule, MatExpansionModule, MatPaginatorModule, MatIconModule]; }, exports: function () { return [MatBasicAudioPlayerComponent,
        MatAdvancedAudioPlayerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxAudioPlayerModule, [{
        type: NgModule,
        args: [{
                declarations: [MatBasicAudioPlayerComponent, SecondsToMinutesPipe, MatAdvancedAudioPlayerComponent],
                imports: [CommonModule, FormsModule, MatButtonModule, MatCardModule, MatTableModule, MatFormFieldModule,
                    MatSliderModule, MatExpansionModule, MatPaginatorModule, MatIconModule],
                exports: [MatBasicAudioPlayerComponent, MatAdvancedAudioPlayerComponent],
                providers: [AudioPlayerService]
            }]
    }], function () { return []; }, null); })();

class Track {
}

/*
 * Public API Surface of ngx-audio-player
 */

/**
 * Generated bundle index. Do not edit.
 */

export { MatAdvancedAudioPlayerComponent, MatBasicAudioPlayerComponent, NgxAudioPlayerModule, Track, BaseAudioPlayerFunctions as ɵa, AudioPlayerService as ɵb, SecondsToMinutesPipe as ɵc };

//# sourceMappingURL=ngx-audio-player.js.map