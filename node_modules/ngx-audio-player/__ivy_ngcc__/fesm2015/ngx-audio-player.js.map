{"version":3,"file":"ngx-audio-player.js","sources":["ng:/ngx-audio-player/lib/service/audio-player-service/audio-player.service.ts","ng:/ngx-audio-player/lib/component/base/base-audio-player-components.ts","ng:/ngx-audio-player/lib/component/mat-advanced-audio-player/mat-advanced-audio-player.component.ts","ng:/ngx-audio-player/lib/component/mat-basic-audio-player/mat-basic-audio-player.component.ts","ng:/ngx-audio-player/lib/pipe/seconds-to-minutes.ts","ng:/ngx-audio-player/lib/ngx-audio-player.module.ts","ng:/ngx-audio-player/lib/model/track.model.ts","ng:/ngx-audio-player/public_api.ts","ng:/ngx-audio-player/ngx-audio-player.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Track } from '../../model/track.model';\n\n@Injectable()\nexport class AudioPlayerService {\n\n  playlist: Track[] = [];\n\n  indexSong = 0;\n  currentTrack: BehaviorSubject<{}> = new BehaviorSubject(this.playlist[this.indexSong]);\n  currentTime = 0;\n  duration = 0;\n\n  constructor() {\n\n  }\n\n  init(): void {\n    this.updateCurrentSong();\n  }\n\n  nextSong(): void {\n    if ((this.indexSong + 1) >= this.playlist.length) {\n      this.indexSong = 0;\n    } else {\n      this.indexSong++;\n    }\n    this.updateCurrentSong();\n  }\n\n  previousSong(): void {\n    if ((this.indexSong - 1) < 0) {\n      this.indexSong = (this.playlist.length - 1);\n    } else {\n      this.indexSong--;\n    }\n    this.updateCurrentSong();\n  }\n\n  resetPlaylist(): void {\n    this.indexSong = 0;\n    this.updateCurrentSong();\n  }\n\n  selectATrack(index: number): void {\n    this.indexSong = index - 1;\n    this.updateCurrentSong();\n  }\n\n  updateCurrentSong(): void {\n    const current = this.playlist[this.indexSong];\n    const previous = ((this.indexSong - 1) >= 0) ? this.playlist[this.indexSong - 1] : this.playlist[this.playlist.length - 1];\n    const next = ((this.indexSong + 1) >= this.playlist.length) ? this.playlist[0] : this.playlist[this.indexSong + 1];\n\n    this.currentTrack.next([\n      previous,\n      current,\n      next\n    ]);\n  }\n\n  getSubjectCurrentTrack(): BehaviorSubject<{}> {\n    return this.currentTrack;\n  }\n\n  getPlaylist(): Track[] {\n    return this.playlist;\n  }\n\n  setPlaylist(playlist: Track[]) {\n    this.playlist = playlist;\n  }\n\n  getIndexSong() {\n    return this.indexSong;\n  }\n}\n","import { ViewChild, ElementRef } from '@angular/core';\nimport { MatSlider } from '@angular/material/slider';\n\nexport class BaseAudioPlayerFunctions {\n\n    @ViewChild('audioPlayer', {static: true}) player: ElementRef;\n    timeLineDuration: MatSlider;\n\n    loaderDisplay = false;\n    isPlaying = false;\n    currentTime = 0;\n    volume = 0.1;\n    duration = 0.01;\n\n    currTimePosChanged(event) {\n        this.player.nativeElement.currentTime = event.value;\n    }\n\n    bindPlayerEvent(): void {\n        this.player.nativeElement.addEventListener('playing', () => {\n            this.isPlaying = true;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n        this.player.nativeElement.addEventListener('pause', () => {\n            this.isPlaying = false;\n        });\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.currentTime = Math.floor(this.player.nativeElement.currentTime);\n        });\n        this.player.nativeElement.addEventListener('volume', () => {\n            this.volume = Math.floor(this.player.nativeElement.volume);\n        });\n        this.player.nativeElement.addEventListener('loadstart', () => {\n            this.loaderDisplay = true;\n        });\n        this.player.nativeElement.addEventListener('loadeddata', () => {\n            this.loaderDisplay = false;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n    }\n\n    playBtnHandler(): void {\n        if (this.loaderDisplay) {\n            return;\n        }\n        if (this.player.nativeElement.paused) {\n            this.player.nativeElement.play(this.currentTime);\n        } else {\n            this.currentTime = this.player.nativeElement.currentTime;\n            this.player.nativeElement.pause();\n        }\n    }\n\n    play(): void {\n        setTimeout(() => {\n            this.player.nativeElement.play();\n        }, 0);\n    }\n\n    toggleVolume() {\n        if (this.volume === 0) {\n            this.setVolume(1.0);\n        } else {\n            this.setVolume(0);\n        }\n    }\n\n    private setVolume(vol) {\n        this.volume = vol;\n        this.player.nativeElement.volume = this.volume;\n    }\n\n}\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';\nimport { Track } from '../../model/track.model';\nimport { BaseAudioPlayerFunctions } from '../base/base-audio-player-components';\nimport { MatSlider } from '@angular/material/slider';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n    selector: 'mat-advanced-audio-player',\n    templateUrl: './mat-advanced-audio-player.component.html',\n    styleUrls: ['./mat-advanced-audio-player.component.css']\n})\nexport class MatAdvancedAudioPlayerComponent extends BaseAudioPlayerFunctions implements OnInit {\n\n    displayedColumns: string[] = ['title', 'status'];\n    timeLineDuration: MatSlider;\n\n    dataSource = new MatTableDataSource<Track>();\n\n    paginator: MatPaginator;\n\n    playlistData: Track[];\n\n    @Input()\n    displayTitle = true;\n\n    @Input()\n    displayPlaylist = true;\n\n    @Input()\n    pageSizeOptions = [10, 20, 30];\n\n    @Input()\n    expanded = true;\n\n    @Input()\n    autoPlay = false;\n\n    @Input()\n    displayVolumeControls = true;\n\n    playlistTrack: any;\n\n    constructor(private playlistService: AudioPlayerService) {\n        super();\n    }\n\n    ngOnInit() {\n        this.setDataSourceAttributes();\n        this.bindPlayerEvent();\n        this.player.nativeElement.addEventListener('ended', () => {\n            if (this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n                this.nextSong();\n            }\n        });\n        this.playlistService.setPlaylist(this.playlistData);\n        this.playlistService.getSubjectCurrentTrack().subscribe((playlistTrack) => {\n            this.playlistTrack = playlistTrack;\n        });\n        this.player.nativeElement.currentTime = 0;\n        this.playlistService.init();\n        if (this.autoPlay) {\n            super.play();\n        }\n    }\n\n    @ViewChild(MatPaginator, { static: false }) set matPaginator(mp: MatPaginator) {\n        this.paginator = mp;\n        this.setDataSourceAttributes();\n    }\n\n    setDataSourceAttributes() {\n        let index = 1;\n        if (this.playlistData) {\n            this.playlistData.forEach(data => {\n                data.index = index++;\n            });\n            this.dataSource = new MatTableDataSource<Track>(this.playlistData);\n            this.dataSource.paginator = this.paginator;\n        }\n    }\n\n    nextSong(): void {\n        if (this.displayPlaylist == true\n            && (((this.playlistService.indexSong + 1) % this.paginator.pageSize) === 0\n                || (this.playlistService.indexSong + 1) === this.paginator.length)) {\n            if (this.paginator.hasNextPage()) {\n                this.paginator.nextPage();\n            } else if (!this.paginator.hasNextPage()) {\n                this.paginator.firstPage();\n            }\n        }\n        this.currentTime = 0;\n        this.duration = 0.01;\n        this.playlistService.nextSong();\n        this.play();\n    }\n\n    previousSong(): void {\n        this.currentTime = 0;\n        this.duration = 0.01;\n        if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n            if (this.displayPlaylist == true\n                && (((this.playlistService.indexSong) % this.paginator.pageSize) === 0\n                    || (this.playlistService.indexSong) === 0)) {\n                if (this.paginator.hasPreviousPage()) {\n                    this.paginator.previousPage();\n                } else if (!this.paginator.hasPreviousPage()) {\n                    this.paginator.lastPage();\n                }\n            }\n            this.playlistService.previousSong();\n        } else {\n            this.resetSong();\n        }\n        this.play();\n    }\n\n    resetSong(): void {\n        this.player.nativeElement.src = this.playlistTrack[1].link;\n    }\n\n    selectTrack(index: number): void {\n        console.log('selectTrack(index: number): void: ' + index);\n        this.playlistService.selectATrack(index);\n        setTimeout(() => {\n            this.player.nativeElement.play();\n        }, 0);\n    }\n\n    checkIfSongHasStartedSinceAtleastTwoSeconds(): boolean {\n        return this.player.nativeElement.currentTime > 2;\n    }\n\n    @Input()\n    set playlist(playlist: Track[]) {\n        this.playlistData = playlist;\n        this.ngOnInit();\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BaseAudioPlayerFunctions } from '../base/base-audio-player-components';\n\n@Component({\n    selector: 'mat-basic-audio-player',\n    templateUrl: './mat-basic-audio-player.component.html',\n    styleUrls: ['./mat-basic-audio-player.component.css']\n})\nexport class MatBasicAudioPlayerComponent extends BaseAudioPlayerFunctions implements OnInit {\n\n    @Input()\n    title: string;\n\n    @Input()\n    audioUrl: string;\n\n    @Input()\n    displayTitle = false;\n\n    @Input()\n    autoPlay = false;\n\n    @Input()\n    displayVolumeControls = true;\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n        this.bindPlayerEvent();\n        if (this.autoPlay) {\n            super.play();\n        }\n    }\n\n    resetSong(): void {\n        this.player.nativeElement.src = this.audioUrl;\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Transform seconds to minutes:seconds\n * Example : 270 -> 02:30\n*/\n@Pipe({name: 'secondsToMinutes'})\nexport class SecondsToMinutesPipe implements PipeTransform {\n    transform(time: number): string {\n        const minutes = ('0' + Math.floor(time / 60)).slice(-2);\n        const seconds = ('0' + time % 60).slice(-2);\n        return `${minutes}:${seconds}`;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatBasicAudioPlayerComponent } from './component/mat-basic-audio-player/mat-basic-audio-player.component';\nimport { AudioPlayerService } from './service/audio-player-service/audio-player.service';\nimport { CommonModule } from '@angular/common';\nimport { SecondsToMinutesPipe } from './pipe/seconds-to-minutes';\nimport { MatAdvancedAudioPlayerComponent } from './component/mat-advanced-audio-player/mat-advanced-audio-player.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [MatBasicAudioPlayerComponent, SecondsToMinutesPipe, MatAdvancedAudioPlayerComponent],\n  imports: [CommonModule, FormsModule, MatButtonModule, MatCardModule, MatTableModule, MatFormFieldModule,\n    MatSliderModule, MatExpansionModule, MatPaginatorModule, MatIconModule],\n  exports: [MatBasicAudioPlayerComponent, MatAdvancedAudioPlayerComponent],\n  providers: [AudioPlayerService]\n})\nexport class NgxAudioPlayerModule {\n  constructor() {\n  }\n}\n","export class Track {\n  index?: number;\n  link: string;\n  title: string;\n}\n","/*\n * Public API Surface of ngx-audio-player\n */\n\nexport * from './lib/component/mat-advanced-audio-player/mat-advanced-audio-player.component';\nexport * from './lib/component/mat-basic-audio-player/mat-basic-audio-player.component';\nexport * from './lib/ngx-audio-player.module';\nexport * from './lib/model/track.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {BaseAudioPlayerFunctions as ɵa} from './lib/component/base/base-audio-player-components';\nexport {SecondsToMinutesPipe as ɵc} from './lib/pipe/seconds-to-minutes';\nexport {AudioPlayerService as ɵb} from './lib/service/audio-player-service/audio-player.service';"]}