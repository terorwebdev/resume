import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
import { BaseAudioPlayerFunctions } from '../base/base-audio-player-components';
let MatBasicAudioPlayerComponent = class MatBasicAudioPlayerComponent extends BaseAudioPlayerFunctions {
    constructor() {
        super();
        this.displayTitle = false;
        this.autoPlay = false;
        this.displayVolumeControls = true;
    }
    ngOnInit() {
        this.bindPlayerEvent();
        if (this.autoPlay) {
            super.play();
        }
    }
    resetSong() {
        this.player.nativeElement.src = this.audioUrl;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], MatBasicAudioPlayerComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], MatBasicAudioPlayerComponent.prototype, "audioUrl", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatBasicAudioPlayerComponent.prototype, "displayTitle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatBasicAudioPlayerComponent.prototype, "autoPlay", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatBasicAudioPlayerComponent.prototype, "displayVolumeControls", void 0);
MatBasicAudioPlayerComponent = __decorate([
    Component({
        selector: 'mat-basic-audio-player',
        template: "<mat-card class=\"d-flex ngx-basic-audio-player z-depth-1 mat-elevation-z1\">\n    <audio [src]=\"audioUrl\" #audioPlayer></audio>\n    <button mat-button (click)='playBtnHandler();' class=\"ngx-basic-audio-player-button-handler\"\n        style=\"font-size: 14px!important;\" [disabled]=\"loaderDisplay\">\n            <mat-icon *ngIf=\"!loaderDisplay && !isPlaying\" class=\"play-track\" aria-hidden=\"true\">\n                <!-- Play icon (play_arrow) -->\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M8 5v14l11-7z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n            </mat-icon>\n            <mat-icon *ngIf=\"!loaderDisplay && isPlaying\" class=\"pause-track\" aria-hidden=\"true\">\n                <!-- Pause icon (pause) -->\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n            </mat-icon>\n    </button>\n    <div class=\"flex-fill pl-1 ngx-basic-audio-player-slider\">\n        <mat-slider style=\"width: 100%\" min=\"0\" max=\"{{duration}}\" value=\"{{currentTime}}\"\n            (change)=\"currTimePosChanged($event)\"></mat-slider>\n    </div>\n    <div class=\"d-flex ngx-basic-audio-player-duration\">\n        <span *ngIf=\"duration !== 0.01\" class=\"pl-2 pr-3 my-auto\" style=\"font-size: 14px!important;\">\n            -{{duration-currentTime |\n            secondsToMinutes }}\n        </span>\n    </div>\n    <button *ngIf=\"displayVolumeControls\" mat-button (click)='toggleVolume();'\n        style=\"padding: 0px!important; min-width:48px!important;\">\n        <mat-icon *ngIf=\"volume === 0\" class=\"volume-mute\" aria-hidden=\"true\">\n            <!-- Volume mute icon (volume_off) -->\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\"><path d=\"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n          </mat-icon>\n          <mat-icon *ngIf=\"volume > 0\" class=\"volume-up\" aria-hidden=\"true\">\n            <!-- Volume up icon (volume_up) -->\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\"><path d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n          </mat-icon>\n    </button>\n</mat-card>\n\n<mat-card class=\"z-depth-1 mat-elevation-z1\" *ngIf=\"displayTitle && title !== ''\">\n    <div style=\"text-align: center;\">\n        <div style=\"margin: 1px 2px; padding: 1em\">\n            {{ title }}\n        </div>\n    </div>\n</mat-card>",
        styles: ["@import url(https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.2.1/css/bootstrap-grid.min.css);mat-card,mat-slider{padding:0!important}button:focus,button:hover{outline:0!important}.ngx-basic-audio-player{min-width:300px}svg{vertical-align:top}.mat-icon{height:32px!important;width:32px!important}.material-icons{font-size:32px!important}mat-card{background:rgba(0,0,0,.02)}"]
    }),
    __metadata("design:paramtypes", [])
], MatBasicAudioPlayerComponent);
export { MatBasicAudioPlayerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LWJhc2ljLWF1ZGlvLXBsYXllci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtYXVkaW8tcGxheWVyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudC9tYXQtYmFzaWMtYXVkaW8tcGxheWVyL21hdC1iYXNpYy1hdWRpby1wbGF5ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQU9oRixJQUFhLDRCQUE0QixHQUF6QyxNQUFhLDRCQUE2QixTQUFRLHdCQUF3QjtJQWlCdEU7UUFDSSxLQUFLLEVBQUUsQ0FBQztRQVRaLGlCQUFZLEdBQUcsS0FBSyxDQUFDO1FBR3JCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFHakIsMEJBQXFCLEdBQUcsSUFBSSxDQUFDO0lBSTdCLENBQUM7SUFFRCxRQUFRO1FBQ0osSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3ZCLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNoQjtJQUNMLENBQUM7SUFFRCxTQUFTO1FBQ0wsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDbEQsQ0FBQztDQUVKLENBQUE7QUE3Qkc7SUFEQyxLQUFLLEVBQUU7OzJEQUNNO0FBR2Q7SUFEQyxLQUFLLEVBQUU7OzhEQUNTO0FBR2pCO0lBREMsS0FBSyxFQUFFOztrRUFDYTtBQUdyQjtJQURDLEtBQUssRUFBRTs7OERBQ1M7QUFHakI7SUFEQyxLQUFLLEVBQUU7OzJFQUNxQjtBQWZwQiw0QkFBNEI7SUFMeEMsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLHdCQUF3QjtRQUNsQyxxb0dBQXNEOztLQUV6RCxDQUFDOztHQUNXLDRCQUE0QixDQWdDeEM7U0FoQ1ksNEJBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlQXVkaW9QbGF5ZXJGdW5jdGlvbnMgfSBmcm9tICcuLi9iYXNlL2Jhc2UtYXVkaW8tcGxheWVyLWNvbXBvbmVudHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ21hdC1iYXNpYy1hdWRpby1wbGF5ZXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9tYXQtYmFzaWMtYXVkaW8tcGxheWVyLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9tYXQtYmFzaWMtYXVkaW8tcGxheWVyLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBNYXRCYXNpY0F1ZGlvUGxheWVyQ29tcG9uZW50IGV4dGVuZHMgQmFzZUF1ZGlvUGxheWVyRnVuY3Rpb25zIGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIEBJbnB1dCgpXG4gICAgdGl0bGU6IHN0cmluZztcblxuICAgIEBJbnB1dCgpXG4gICAgYXVkaW9Vcmw6IHN0cmluZztcblxuICAgIEBJbnB1dCgpXG4gICAgZGlzcGxheVRpdGxlID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIGF1dG9QbGF5ID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIGRpc3BsYXlWb2x1bWVDb250cm9scyA9IHRydWU7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5iaW5kUGxheWVyRXZlbnQoKTtcbiAgICAgICAgaWYgKHRoaXMuYXV0b1BsYXkpIHtcbiAgICAgICAgICAgIHN1cGVyLnBsYXkoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlc2V0U29uZygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5wbGF5ZXIubmF0aXZlRWxlbWVudC5zcmMgPSB0aGlzLmF1ZGlvVXJsO1xuICAgIH1cblxufVxuIl19