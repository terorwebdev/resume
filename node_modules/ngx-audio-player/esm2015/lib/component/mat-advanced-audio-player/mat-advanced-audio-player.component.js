import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';
import { BaseAudioPlayerFunctions } from '../base/base-audio-player-components';
import { MatTableDataSource } from '@angular/material/table';
import { MatPaginator } from '@angular/material/paginator';
let MatAdvancedAudioPlayerComponent = class MatAdvancedAudioPlayerComponent extends BaseAudioPlayerFunctions {
    constructor(playlistService) {
        super();
        this.playlistService = playlistService;
        this.displayedColumns = ['title', 'status'];
        this.dataSource = new MatTableDataSource();
        this.displayTitle = true;
        this.displayPlaylist = true;
        this.pageSizeOptions = [10, 20, 30];
        this.expanded = true;
        this.autoPlay = false;
        this.displayVolumeControls = true;
    }
    ngOnInit() {
        this.setDataSourceAttributes();
        this.bindPlayerEvent();
        this.player.nativeElement.addEventListener('ended', () => {
            if (this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {
                this.nextSong();
            }
        });
        this.playlistService.setPlaylist(this.playlistData);
        this.playlistService.getSubjectCurrentTrack().subscribe((playlistTrack) => {
            this.playlistTrack = playlistTrack;
        });
        this.player.nativeElement.currentTime = 0;
        this.playlistService.init();
        if (this.autoPlay) {
            super.play();
        }
    }
    set matPaginator(mp) {
        this.paginator = mp;
        this.setDataSourceAttributes();
    }
    setDataSourceAttributes() {
        let index = 1;
        if (this.playlistData) {
            this.playlistData.forEach(data => {
                data.index = index++;
            });
            this.dataSource = new MatTableDataSource(this.playlistData);
            this.dataSource.paginator = this.paginator;
        }
    }
    nextSong() {
        if (this.displayPlaylist == true
            && (((this.playlistService.indexSong + 1) % this.paginator.pageSize) === 0
                || (this.playlistService.indexSong + 1) === this.paginator.length)) {
            if (this.paginator.hasNextPage()) {
                this.paginator.nextPage();
            }
            else if (!this.paginator.hasNextPage()) {
                this.paginator.firstPage();
            }
        }
        this.currentTime = 0;
        this.duration = 0.01;
        this.playlistService.nextSong();
        this.play();
    }
    previousSong() {
        this.currentTime = 0;
        this.duration = 0.01;
        if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {
            if (this.displayPlaylist == true
                && (((this.playlistService.indexSong) % this.paginator.pageSize) === 0
                    || (this.playlistService.indexSong) === 0)) {
                if (this.paginator.hasPreviousPage()) {
                    this.paginator.previousPage();
                }
                else if (!this.paginator.hasPreviousPage()) {
                    this.paginator.lastPage();
                }
            }
            this.playlistService.previousSong();
        }
        else {
            this.resetSong();
        }
        this.play();
    }
    resetSong() {
        this.player.nativeElement.src = this.playlistTrack[1].link;
    }
    selectTrack(index) {
        console.log('selectTrack(index: number): void: ' + index);
        this.playlistService.selectATrack(index);
        setTimeout(() => {
            this.player.nativeElement.play();
        }, 0);
    }
    checkIfSongHasStartedSinceAtleastTwoSeconds() {
        return this.player.nativeElement.currentTime > 2;
    }
    set playlist(playlist) {
        this.playlistData = playlist;
        this.ngOnInit();
    }
};
MatAdvancedAudioPlayerComponent.ctorParameters = () => [
    { type: AudioPlayerService }
];
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "displayTitle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "displayPlaylist", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "pageSizeOptions", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "expanded", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "autoPlay", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MatAdvancedAudioPlayerComponent.prototype, "displayVolumeControls", void 0);
__decorate([
    ViewChild(MatPaginator, { static: false }),
    __metadata("design:type", MatPaginator),
    __metadata("design:paramtypes", [MatPaginator])
], MatAdvancedAudioPlayerComponent.prototype, "matPaginator", null);
__decorate([
    Input(),
    __metadata("design:type", Array),
    __metadata("design:paramtypes", [Array])
], MatAdvancedAudioPlayerComponent.prototype, "playlist", null);
MatAdvancedAudioPlayerComponent = __decorate([
    Component({
        selector: 'mat-advanced-audio-player',
        template: "<mat-card class=\"d-flex justify-content-center ngx-advanced-audio-player z-depth-1 mat-elevation-z2\" style=\"margin: 0px;\">\n  \n  <audio [src]=\"playlistTrack[1].link\" #audioPlayer></audio>\n\n    <button class=\"p-1\" mat-button (click)='previousSong();'\n      [disabled]=\"loaderDisplay\">\n      <mat-icon aria-hidden=\"true\">\n        <!-- Skip previous icon (skip_previous) -->\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M6 6h2v12H6zm3.5 6l8.5 6V6z\"/><path d=\"M0 0h32v32H0z\" fill=\"none\"/></svg>\n      </mat-icon>\n    </button>\n    <button mat-button class=\"p-1 play-pause\" (click)='playBtnHandler();' [disabled]=\"loaderDisplay\">\n        <mat-icon *ngIf=\"!loaderDisplay && !isPlaying\" class=\"play-track\" aria-hidden=\"true\">\n          <!-- Play icon (play_arrow) -->\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M8 5v14l11-7z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n        </mat-icon>\n        <mat-icon *ngIf=\"!loaderDisplay && isPlaying\" class=\"pause-track\" aria-hidden=\"true\">\n          <!-- Pause icon (pause) -->\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n        </mat-icon>\n    </button>\n    <button mat-button class=\"p-1 skip-next\" (click)='nextSong();' [disabled]=\"loaderDisplay\">\n      <mat-icon class=\"next-track\" aria-hidden=\"true\">\n        <!-- Skip next icon (skip_next) -->\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n      </mat-icon>\n    </button>\n\n  <div class=\"col\">\n    <div class=\"d-flex flex-fill justify-content-center\">\n      <div class=\"d-none d-sm-block py-3 px-1\" style=\"font-size: 12px\">\n        <span *ngIf=\"duration !== 0.01\">\n          {{currentTime | secondsToMinutes}}\n        </span>\n      </div>\n      <mat-slider class=\"d-none d-sm-block flex-fill p-1\" style=\"width: 100%\" min=\"0\" max=\"{{duration}}\" value=\"{{currentTime}}\"\n        (change)=\"currTimePosChanged($event)\"></mat-slider>\n\n      <div class=\"py-3 px-1\" style=\"font-size: 12px; text-align: right\">\n        <span *ngIf=\"duration !== 0.01\">\n          -{{duration-currentTime | secondsToMinutes }}\n        </span>\n      </div>\n    </div>\n  </div>\n  <button *ngIf=\"displayVolumeControls\" mat-button class=\"p-1 volume\" (click)='toggleVolume();'>\n    <mat-icon *ngIf=\"volume === 0\" class=\"volume-mute\" aria-hidden=\"true\">\n      <!-- Volume mute icon (volume_off) -->\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\"><path d=\"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n    </mat-icon>\n    <mat-icon *ngIf=\"volume > 0\" class=\"volume-up\" aria-hidden=\"true\">\n      <!-- Volume up icon (volume_up) -->\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 24 24\"><path d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n    </mat-icon>\n  </button>\n</mat-card>\n\n<mat-card *ngIf=\"displayTitle\" class=\"mat-elevation-z1\">\n  <div style=\"text-align: center;\">\n    <div style=\"margin: 1px 2px; padding: 1em\">\n      <span *ngIf=\"!isPlaying\">{{ playlistTrack[1].title }}</span>\n      <marquee *ngIf=\"isPlaying\" behavior=\"scroll\" direction=\"left\">{{ playlistTrack[1].title }}</marquee>\n    </div>\n    <div class=\"clear\"></div>\n  </div>\n</mat-card>\n\n<mat-accordion *ngIf=\"displayPlaylist\">\n  <mat-expansion-panel [expanded]=\"expanded\">\n    <mat-expansion-panel-header>\n      Play List\n    </mat-expansion-panel-header>\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z6\">\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef> Title </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"selectTrack(element.index)\"> {{element.title}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <div *ngIf=\"playlistTrack[1].title === element.title\">\n            <!-- <mat-icon *ngIf=\"isPlaying\" aria-hidden=\"true\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n            </mat-icon> -->\n            <mat-icon class=\"currently-playing\" *ngIf=\"isPlaying\" aria-hidden=\"true\">\n              <!-- Play icon (play_arrow) -->\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 3v9.28c-.47-.17-.97-.28-1.5-.28C8.01 12 6 14.01 6 16.5S8.01 21 10.5 21c2.31 0 4.2-1.75 4.45-4H15V6h4V3h-7z\"/></svg>\n            </mat-icon>\n          </div>\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr class=\"mat-select-content\" mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons></mat-paginator>\n  </mat-expansion-panel>\n</mat-accordion>",
        styles: ["@import url(https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.2.1/css/bootstrap-grid.min.css);mat-card{padding:0!important;background:rgba(0,0,0,.02)}mat-slider{max-height:30px}table{width:100%}button:focus,button:hover{outline:0!important}.ngx-advanced-audio-player{min-width:325px}.mat-icon{height:32px!important;width:32px!important}.material-icons{font-size:16px!important}mat-icon>.currently-playing{height:16px!important;width:16px!important}.play-pause{border-left:2px solid rgba(0,0,0,.1);border-right:2px solid rgba(0,0,0,.1)}.volume{border-left:2px solid rgba(0,0,0,.1)}.skip-next{border-right:2px solid rgba(0,0,0,.1)}"]
    }),
    __metadata("design:paramtypes", [AudioPlayerService])
], MatAdvancedAudioPlayerComponent);
export { MatAdvancedAudioPlayerComponent };
//# sourceMappingURL=data:application/json;base64,